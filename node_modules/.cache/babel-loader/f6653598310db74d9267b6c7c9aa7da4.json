{"ast":null,"code":"var _jsxFileName = \"/Users/georgijzubov/ReactJM/1. ToDo/kata-todo/src/components/task/task.jsx\";\nimport React, { Component } from 'react';\nimport './task.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Task extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      description: '',\n      edit: false\n    };\n\n    this.onDescriptionChange = evt => {\n      this.setState({\n        description: evt.target.value\n      });\n    };\n\n    this.onSubmit = evt => {\n      evt.preventDefault();\n      const {\n        onEdit\n      } = this.props;\n      const {\n        description\n      } = this.state;\n      onEdit(description);\n    };\n  }\n\n  render() {\n    const {\n      description,\n      created,\n      onDeleted,\n      onToggleCompleted,\n      completed,\n      onToggleEdit,\n      edit\n    } = this.props;\n    let className;\n    let checked = '';\n\n    if (completed) {\n      className = 'completed';\n      checked = 'checked';\n    }\n\n    if (edit) className = 'editing';\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      className: className,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"view\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"toggle\",\n          type: \"checkbox\",\n          onChange: onToggleCompleted,\n          checked: checked\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"description\",\n            children: description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"created\",\n            children: created\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"icon icon-edit\",\n          onClick: onToggleEdit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"icon icon-destroy\",\n          onClick: onDeleted\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"edit\",\n          defaultValue: description,\n          onSubmit: this.onSubmit,\n          onChange: this.onDescriptionChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nTask.defaultProps = {};\nTask.propTypes = {};","map":{"version":3,"sources":["/Users/georgijzubov/ReactJM/1. ToDo/kata-todo/src/components/task/task.jsx"],"names":["React","Component","Task","state","description","edit","onDescriptionChange","evt","setState","target","value","onSubmit","preventDefault","onEdit","props","render","created","onDeleted","onToggleCompleted","completed","onToggleEdit","className","checked","defaultProps","propTypes"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,YAAP;;AAEA,eAAe,MAAMC,IAAN,SAAmBD,SAAnB,CAA6B;AAAA;AAAA;AAAA,SAK1CE,KAL0C,GAKlC;AACNC,MAAAA,WAAW,EAAE,EADP;AAENC,MAAAA,IAAI,EAAG;AAFD,KALkC;;AAAA,SAY1CC,mBAZ0C,GAYnBC,GAAD,IAAS;AAC7B,WAAKC,QAAL,CAAc;AAAEJ,QAAAA,WAAW,EAAEG,GAAG,CAACE,MAAJ,CAAWC;AAA1B,OAAd;AACD,KAdyC;;AAAA,SAgB1CC,QAhB0C,GAgB9BJ,GAAD,IAAS;AAClBA,MAAAA,GAAG,CAACK,cAAJ;AACA,YAAM;AAAEC,QAAAA;AAAF,UAAa,KAAKC,KAAxB;AACA,YAAM;AAAEV,QAAAA;AAAF,UAAkB,KAAKD,KAA7B;AACAU,MAAAA,MAAM,CAACT,WAAD,CAAN;AACD,KArByC;AAAA;;AAuB1CW,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEX,MAAAA,WAAF;AAAeY,MAAAA,OAAf;AAAwBC,MAAAA,SAAxB;AAAmCC,MAAAA,iBAAnC;AAAsDC,MAAAA,SAAtD;AAAiEC,MAAAA,YAAjE;AAA+Ef,MAAAA;AAA/E,QAAwF,KAAKS,KAAnG;AAEA,QAAIO,SAAJ;AACA,QAAIC,OAAO,GAAG,EAAd;;AACA,QAAIH,SAAJ,EAAe;AACbE,MAAAA,SAAS,GAAG,WAAZ;AACAC,MAAAA,OAAO,GAAG,SAAV;AACD;;AACD,QAAIjB,IAAJ,EAAUgB,SAAS,GAAG,SAAZ;AAEV,wBACE;AAAI,MAAA,SAAS,EAAEA,SAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,gCACE;AAAO,UAAA,SAAS,EAAC,QAAjB;AAA0B,UAAA,IAAI,EAAC,UAA/B;AAA0C,UAAA,QAAQ,EAAEH,iBAApD;AAAuE,UAAA,OAAO,EAAEI;AAAhF;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,kCACE;AAAM,YAAA,SAAS,EAAC,aAAhB;AAAA,sBAA+BlB;AAA/B;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAM,YAAA,SAAS,EAAC,SAAhB;AAAA,sBAA2BY;AAA3B;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAME;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,SAAS,EAAC,gBAAhC;AAAiD,UAAA,OAAO,EAAEI;AAA1D;AAAA;AAAA;AAAA;AAAA,gBANF,eASE;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,SAAS,EAAC,mBAAhC;AAAoD,UAAA,OAAO,EAAEH;AAA7D;AAAA;AAAA;AAAA;AAAA,gBATF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAcE;AAAA,+BACE;AACE,UAAA,SAAS,EAAC,MADZ;AAEE,UAAA,YAAY,EAAEb,WAFhB;AAGE,UAAA,QAAQ,EAAE,KAAKO,QAHjB;AAIE,UAAA,QAAQ,EAAE,KAAKL;AAJjB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAdF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAyBD;;AA3DyC;AAAvBJ,I,CACZqB,Y,GAAe,E;AADHrB,I,CAGZsB,S,GAAY,E","sourcesContent":["import React, { Component } from 'react';\nimport './task.css';\n\nexport default class Task extends Component {\n  static defaultProps = {};\n\n  static propTypes = {};\n\n  state = {\n    description: '',\n    edit : false\n  };\n\n  \n\n  onDescriptionChange = (evt) => {\n    this.setState({ description: evt.target.value });\n  };\n\n  onSubmit = (evt) => {\n    evt.preventDefault();\n    const { onEdit } = this.props;\n    const { description } = this.state;\n    onEdit(description);\n  };\n\n  render() {\n    const { description, created, onDeleted, onToggleCompleted, completed, onToggleEdit, edit } = this.props;\n\n    let className;\n    let checked = '';\n    if (completed) {\n      className = 'completed';\n      checked = 'checked';\n    }\n    if (edit) className = 'editing';\n\n    return (\n      <li className={className}>\n        <div className=\"view\">\n          <input className=\"toggle\" type=\"checkbox\" onChange={onToggleCompleted} checked={checked} />\n          <label>\n            <span className=\"description\">{description}</span>\n            <span className=\"created\">{created}</span>\n          </label>\n          <button type=\"submit\" className=\"icon icon-edit\" onClick={onToggleEdit}>\n            {}\n          </button>\n          <button type=\"submit\" className=\"icon icon-destroy\" onClick={onDeleted}>\n            {}\n          </button>\n        </div>\n        <form>\n          <input\n            className=\"edit\"\n            defaultValue={description}\n            onSubmit={this.onSubmit}\n            onChange={this.onDescriptionChange}\n          />\n        </form>\n      </li>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}