{"ast":null,"code":"var _jsxFileName = \"/Users/georgijzubov/ReactJM/1. ToDo/kata-todo/src/components/task/task.jsx\";\nimport React, { Component } from 'react';\nimport './task.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Task extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      description: this.props.description\n    };\n\n    this.onDescriptionChange = evt => {\n      this.setState({\n        description: evt.target.value\n      });\n    };\n\n    this.onSubmit = evt => {\n      evt.preventDefault();\n      const {\n        editItem,\n        id\n      } = this.props;\n      const {\n        description\n      } = this.state;\n      console.log('id', id);\n      editItem(id, description);\n      this.setState({\n        description\n      });\n    };\n  }\n\n  render() {\n    const {\n      id,\n      description,\n      created,\n      onDeleted,\n      onToggleCompleted,\n      completed,\n      onToggleEdit,\n      edit,\n      editItem\n    } = this.props;\n    const {\n      description: newDescription\n    } = this.state;\n    let className;\n    let checked = '';\n\n    if (completed) {\n      className = 'completed';\n      checked = 'checked';\n    }\n\n    if (edit) className = 'editing';\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      className: className,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"view\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"toggle\",\n          type: \"checkbox\",\n          onChange: () => {\n            onToggleCompleted(id);\n          },\n          checked: checked\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"description\",\n            children: description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"created\",\n            children: created\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"icon icon-edit\",\n          onClick: () => {\n            onToggleEdit(id);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"icon icon-destroy\",\n          onClick: onDeleted\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.onSubmit,\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"edit\",\n          value: newDescription,\n          onKeyDown: this.editItem,\n          onChange: this.onDescriptionChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nTask.defaultProps = {};\nTask.propTypes = {};","map":{"version":3,"sources":["/Users/georgijzubov/ReactJM/1. ToDo/kata-todo/src/components/task/task.jsx"],"names":["React","Component","Task","state","description","props","onDescriptionChange","evt","setState","target","value","onSubmit","preventDefault","editItem","id","console","log","render","created","onDeleted","onToggleCompleted","completed","onToggleEdit","edit","newDescription","className","checked","defaultProps","propTypes"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './task.css';\n\nexport default class Task extends Component {\n  static defaultProps = {};\n\n  static propTypes = {};\n\n  state = {\n    description: this.props.description,\n  };\n\n  onDescriptionChange = (evt) => {\n    this.setState({ description: evt.target.value });\n  };\n\n  onSubmit = (evt) => {\n    evt.preventDefault();\n    const { editItem, id } = this.props;\n    const { description } = this.state;\n\n    console.log('id', id);\n\n    editItem(id, description);\n    this.setState({ description });\n  };\n\n  render() {\n    const { id, description, created, onDeleted, onToggleCompleted, completed, onToggleEdit, edit, editItem } =\n      this.props;\n    const { description: newDescription } = this.state;\n    let className;\n    let checked = '';\n    if (completed) {\n      className = 'completed';\n      checked = 'checked';\n    }\n    if (edit) className = 'editing';\n\n    return (\n      <li className={className}>\n        <div className=\"view\">\n          <input className=\"toggle\" type=\"checkbox\" onChange={() =>{onToggleCompleted(id)}} checked={checked} />\n          <label>\n            <span className=\"description\">{description}</span>\n            <span className=\"created\">{created}</span>\n          </label>\n          <button\n            type=\"submit\"\n            className=\"icon icon-edit\"\n            onClick={() => {\n              onToggleEdit(id);\n            }}\n          >\n            {}\n          </button>\n          <button type=\"submit\" className=\"icon icon-destroy\" onClick={onDeleted}>\n            {}\n          </button>\n        </div>\n        <form onSubmit={this.onSubmit}>\n          <input\n            className=\"edit\"\n            value={newDescription}\n            onKeyDown={this.editItem}\n            onChange={this.onDescriptionChange}\n          />\n        </form>\n      </li>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}