{"ast":null,"code":"var _jsxFileName = \"/Users/georgijzubov/ReactJM/1. ToDo/kata-todo/src/components/todoapp/todoapp.jsx\";\nimport React, { Component } from 'react';\nimport { formatDistanceToNow } from 'date-fns';\nimport NewTaskForm from '../new-task-form/new-task-form';\nimport TaskList from '../task-list/task-list';\nimport Footer from '../footer/footer';\nimport './todoapp.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class TodoApp extends Component {\n  constructor() {\n    super(...arguments);\n    this.maxId = 100;\n    this.state = {\n      listData: [{\n        id: Date.now(),\n        created: `created ${formatDistanceToNow(new Date(Date.now()))} ago`,\n        description: text,\n        completed: false,\n        edit: false\n      }],\n      filter: 'All'\n    };\n\n    this.deleteItem = id => {\n      this.setState(_ref => {\n        let {\n          listData\n        } = _ref;\n        const idx = listData.findIndex(el => el.id === id);\n        const newListData = [...listData];\n        newListData.splice(idx, 1);\n        return {\n          listData: newListData\n        };\n      });\n    };\n\n    this.addItem = text => {\n      const newItem = this.createTodoItem(text);\n      this.setState(_ref2 => {\n        let {\n          listData\n        } = _ref2;\n        const newListData = [...listData, newItem];\n        return {\n          listData: newListData\n        };\n      });\n    };\n\n    this.editItem = (id, text) => {\n      const {\n        listData\n      } = this.state;\n      console.log('text: ', text);\n      const [item] = listData.filter(el => el.id === id);\n      const newItem = { ...item,\n        description: text,\n        edit: false\n      };\n      console.log(newItem);\n      this.setState(_ref3 => {\n        let {\n          listData: newListData\n        } = _ref3;\n        const idx = newListData.findIndex(el => el.id === id);\n        const newList = [...newListData.slice(0, idx), newItem, ...newListData.slice(idx + 1)];\n        return newList;\n      });\n    };\n\n    this.onToggleCompleted = id => {\n      this.setState(_ref4 => {\n        let {\n          listData\n        } = _ref4;\n        return {\n          listData: this.toggleProperty(listData, id, 'completed')\n        };\n      });\n    };\n\n    this.onToggleEdit = id => {\n      this.setState(_ref5 => {\n        let {\n          listData\n        } = _ref5;\n        return {\n          listData: this.toggleProperty(listData, id, 'edit')\n        };\n      });\n    };\n\n    this.clearCompleted = () => {\n      const {\n        listData\n      } = this.state;\n      const newListData = listData.filter(el => !el.completed);\n      this.setState({\n        listData: newListData\n      });\n    };\n\n    this.changeFilter = filter => {\n      this.setState({\n        filter\n      });\n    };\n  }\n\n  toggleProperty(arr, id, propName) {\n    const idx = arr.findIndex(el => el.id === id);\n    const oldItem = arr[idx];\n    const newItem = { ...oldItem,\n      [propName]: !oldItem[propName]\n    };\n    return [...arr.slice(0, idx), newItem, ...arr.slice(idx + 1)];\n  }\n\n  createTodoItem(text) {\n    // eslint-disable-next-line no-return-assign\n    return {\n      // eslint-disable-next-line react/no-unused-class-component-methods\n      id: Date.now(),\n      created: `created ${formatDistanceToNow(new Date(Date.now()))} ago`,\n      description: text,\n      completed: false,\n      edit: false\n    };\n  }\n\n  render() {\n    const {\n      listData,\n      filter\n    } = this.state;\n    const itemsLeft = listData.length - listData.filter(el => el.completed).length;\n    let showData;\n\n    switch (filter) {\n      case 'Active':\n        showData = listData.filter(el => !el.completed);\n        break;\n\n      case 'Completed':\n        showData = listData.filter(el => el.completed);\n        break;\n\n      default:\n        showData = listData;\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"todoapp\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"todos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(NewTaskForm, {\n          onItemAdded: this.addItem\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"main\",\n        children: [/*#__PURE__*/_jsxDEV(TaskList, {\n          todos: showData,\n          onDeleted: this.deleteItem,\n          onToggleCompleted: this.onToggleCompleted,\n          onToggleEdit: this.onToggleEdit,\n          editItem: this.editItem\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Footer, {\n          itemsLeft: itemsLeft,\n          changeFilter: this.changeFilter,\n          filter: filter,\n          clearCompleted: this.clearCompleted\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/georgijzubov/ReactJM/1. ToDo/kata-todo/src/components/todoapp/todoapp.jsx"],"names":["React","Component","formatDistanceToNow","NewTaskForm","TaskList","Footer","TodoApp","maxId","state","listData","id","Date","now","created","description","text","completed","edit","filter","deleteItem","setState","idx","findIndex","el","newListData","splice","addItem","newItem","createTodoItem","editItem","console","log","item","newList","slice","onToggleCompleted","toggleProperty","onToggleEdit","clearCompleted","changeFilter","arr","propName","oldItem","render","itemsLeft","length","showData"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,mBAAT,QAAoC,UAApC;AACA,OAAOC,WAAP,MAAwB,gCAAxB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAO,eAAP;;AAEA,eAAe,MAAMC,OAAN,SAAsBL,SAAtB,CAAgC;AAAA;AAAA;AAAA,SAE7CM,KAF6C,GAErC,GAFqC;AAAA,SAI7CC,KAJ6C,GAIrC;AACNC,MAAAA,QAAQ,EAAE,CAAC;AACTC,QAAAA,EAAE,EAAEC,IAAI,CAACC,GAAL,EADK;AAETC,QAAAA,OAAO,EAAG,WAAUX,mBAAmB,CAAC,IAAIS,IAAJ,CAASA,IAAI,CAACC,GAAL,EAAT,CAAD,CAAuB,MAFrD;AAGTE,QAAAA,WAAW,EAAEC,IAHJ;AAITC,QAAAA,SAAS,EAAE,KAJF;AAKTC,QAAAA,IAAI,EAAE;AALG,OAAD,CADJ;AAQNC,MAAAA,MAAM,EAAE;AARF,KAJqC;;AAAA,SAe7CC,UAf6C,GAe/BT,EAAD,IAAQ;AACnB,WAAKU,QAAL,CAAc,QAAkB;AAAA,YAAjB;AAAEX,UAAAA;AAAF,SAAiB;AAC9B,cAAMY,GAAG,GAAGZ,QAAQ,CAACa,SAAT,CAAoBC,EAAD,IAAQA,EAAE,CAACb,EAAH,KAAUA,EAArC,CAAZ;AACA,cAAMc,WAAW,GAAG,CAAC,GAAGf,QAAJ,CAApB;AACAe,QAAAA,WAAW,CAACC,MAAZ,CAAmBJ,GAAnB,EAAwB,CAAxB;AAEA,eAAO;AACLZ,UAAAA,QAAQ,EAAEe;AADL,SAAP;AAGD,OARD;AASD,KAzB4C;;AAAA,SA2B7CE,OA3B6C,GA2BlCX,IAAD,IAAU;AAClB,YAAMY,OAAO,GAAG,KAAKC,cAAL,CAAoBb,IAApB,CAAhB;AACA,WAAKK,QAAL,CAAc,SAAkB;AAAA,YAAjB;AAAEX,UAAAA;AAAF,SAAiB;AAC9B,cAAMe,WAAW,GAAG,CAAC,GAAGf,QAAJ,EAAckB,OAAd,CAApB;AACA,eAAO;AACLlB,UAAAA,QAAQ,EAAEe;AADL,SAAP;AAGD,OALD;AAMD,KAnC4C;;AAAA,SAqC7CK,QArC6C,GAqClC,CAACnB,EAAD,EAAKK,IAAL,KAAc;AACvB,YAAM;AAAEN,QAAAA;AAAF,UAAe,KAAKD,KAA1B;AACAsB,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBhB,IAAtB;AACA,YAAM,CAACiB,IAAD,IAASvB,QAAQ,CAACS,MAAT,CAAiBK,EAAD,IAAQA,EAAE,CAACb,EAAH,KAAUA,EAAlC,CAAf;AACA,YAAMiB,OAAO,GAAG,EAAE,GAAGK,IAAL;AAAWlB,QAAAA,WAAW,EAAEC,IAAxB;AAA8BE,QAAAA,IAAI,EAAE;AAApC,OAAhB;AACAa,MAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAZ;AACA,WAAKP,QAAL,CAAc,SAA+B;AAAA,YAA9B;AAAEX,UAAAA,QAAQ,EAAEe;AAAZ,SAA8B;AAC3C,cAAMH,GAAG,GAAGG,WAAW,CAACF,SAAZ,CAAuBC,EAAD,IAAQA,EAAE,CAACb,EAAH,KAAUA,EAAxC,CAAZ;AACA,cAAMuB,OAAO,GAAG,CAAC,GAAGT,WAAW,CAACU,KAAZ,CAAkB,CAAlB,EAAqBb,GAArB,CAAJ,EAA+BM,OAA/B,EAAwC,GAAGH,WAAW,CAACU,KAAZ,CAAkBb,GAAG,GAAG,CAAxB,CAA3C,CAAhB;AACA,eAAOY,OAAP;AACD,OAJD;AAKD,KAhD4C;;AAAA,SAuD7CE,iBAvD6C,GAuDxBzB,EAAD,IAAQ;AAC1B,WAAKU,QAAL,CAAc;AAAA,YAAC;AAAEX,UAAAA;AAAF,SAAD;AAAA,eAAmB;AAC/BA,UAAAA,QAAQ,EAAE,KAAK2B,cAAL,CAAoB3B,QAApB,EAA8BC,EAA9B,EAAkC,WAAlC;AADqB,SAAnB;AAAA,OAAd;AAGD,KA3D4C;;AAAA,SA6D7C2B,YA7D6C,GA6D7B3B,EAAD,IAAQ;AACrB,WAAKU,QAAL,CAAc;AAAA,YAAC;AAAEX,UAAAA;AAAF,SAAD;AAAA,eAAmB;AAC/BA,UAAAA,QAAQ,EAAE,KAAK2B,cAAL,CAAoB3B,QAApB,EAA8BC,EAA9B,EAAkC,MAAlC;AADqB,SAAnB;AAAA,OAAd;AAGD,KAjE4C;;AAAA,SAmE7C4B,cAnE6C,GAmE5B,MAAM;AACrB,YAAM;AAAE7B,QAAAA;AAAF,UAAe,KAAKD,KAA1B;AACA,YAAMgB,WAAW,GAAGf,QAAQ,CAACS,MAAT,CAAiBK,EAAD,IAAQ,CAACA,EAAE,CAACP,SAA5B,CAApB;AACA,WAAKI,QAAL,CAAc;AACZX,QAAAA,QAAQ,EAAEe;AADE,OAAd;AAGD,KAzE4C;;AAAA,SA2E7Ce,YA3E6C,GA2E7BrB,MAAD,IAAY;AACzB,WAAKE,QAAL,CAAc;AAAEF,QAAAA;AAAF,OAAd;AACD,KA7E4C;AAAA;;AA+E7CkB,EAAAA,cAAc,CAACI,GAAD,EAAM9B,EAAN,EAAU+B,QAAV,EAAoB;AAChC,UAAMpB,GAAG,GAAGmB,GAAG,CAAClB,SAAJ,CAAeC,EAAD,IAAQA,EAAE,CAACb,EAAH,KAAUA,EAAhC,CAAZ;AAEA,UAAMgC,OAAO,GAAGF,GAAG,CAACnB,GAAD,CAAnB;AACA,UAAMM,OAAO,GAAG,EAAE,GAAGe,OAAL;AAAc,OAACD,QAAD,GAAY,CAACC,OAAO,CAACD,QAAD;AAAlC,KAAhB;AAEA,WAAO,CAAC,GAAGD,GAAG,CAACN,KAAJ,CAAU,CAAV,EAAab,GAAb,CAAJ,EAAuBM,OAAvB,EAAgC,GAAGa,GAAG,CAACN,KAAJ,CAAUb,GAAG,GAAG,CAAhB,CAAnC,CAAP;AACD;;AAEDO,EAAAA,cAAc,CAACb,IAAD,EAAO;AACnB;AACA,WAAO;AACL;AACAL,MAAAA,EAAE,EAAEC,IAAI,CAACC,GAAL,EAFC;AAGLC,MAAAA,OAAO,EAAG,WAAUX,mBAAmB,CAAC,IAAIS,IAAJ,CAASA,IAAI,CAACC,GAAL,EAAT,CAAD,CAAuB,MAHzD;AAILE,MAAAA,WAAW,EAAEC,IAJR;AAKLC,MAAAA,SAAS,EAAE,KALN;AAMLC,MAAAA,IAAI,EAAE;AAND,KAAP;AAQD;;AAED0B,EAAAA,MAAM,GAAG;AACP,UAAM;AAAElC,MAAAA,QAAF;AAAYS,MAAAA;AAAZ,QAAuB,KAAKV,KAAlC;AACA,UAAMoC,SAAS,GAAGnC,QAAQ,CAACoC,MAAT,GAAkBpC,QAAQ,CAACS,MAAT,CAAiBK,EAAD,IAAQA,EAAE,CAACP,SAA3B,EAAsC6B,MAA1E;AAEA,QAAIC,QAAJ;;AACA,YAAQ5B,MAAR;AACE,WAAK,QAAL;AACE4B,QAAAA,QAAQ,GAAGrC,QAAQ,CAACS,MAAT,CAAiBK,EAAD,IAAQ,CAACA,EAAE,CAACP,SAA5B,CAAX;AACA;;AACF,WAAK,WAAL;AACE8B,QAAAA,QAAQ,GAAGrC,QAAQ,CAACS,MAAT,CAAiBK,EAAD,IAAQA,EAAE,CAACP,SAA3B,CAAX;AACA;;AACF;AACE8B,QAAAA,QAAQ,GAAGrC,QAAX;AARJ;;AAWA,wBACE;AAAS,MAAA,SAAS,EAAC,SAAnB;AAAA,8BACE;AAAQ,QAAA,SAAS,EAAC,QAAlB;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,WAAD;AAAa,UAAA,WAAW,EAAE,KAAKiB;AAA/B;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAS,QAAA,SAAS,EAAC,MAAnB;AAAA,gCACE,QAAC,QAAD;AACE,UAAA,KAAK,EAAEoB,QADT;AAEE,UAAA,SAAS,EAAE,KAAK3B,UAFlB;AAGE,UAAA,iBAAiB,EAAE,KAAKgB,iBAH1B;AAIE,UAAA,YAAY,EAAE,KAAKE,YAJrB;AAKE,UAAA,QAAQ,EAAE,KAAKR;AALjB;AAAA;AAAA;AAAA;AAAA,gBADF,eAQE,QAAC,MAAD;AACE,UAAA,SAAS,EAAEe,SADb;AAEE,UAAA,YAAY,EAAE,KAAKL,YAFrB;AAGE,UAAA,MAAM,EAAErB,MAHV;AAIE,UAAA,cAAc,EAAE,KAAKoB;AAJvB;AAAA;AAAA;AAAA;AAAA,gBARF;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAuBD;;AA3I4C","sourcesContent":["import React, { Component } from 'react';\nimport { formatDistanceToNow } from 'date-fns';\nimport NewTaskForm from '../new-task-form/new-task-form';\nimport TaskList from '../task-list/task-list';\nimport Footer from '../footer/footer';\nimport './todoapp.css';\n\nexport default class TodoApp extends Component {\n  // eslint-disable-next-line react/no-unused-class-component-methods\n  maxId = 100;\n\n  state = {\n    listData: [{\n      id: Date.now(),\n      created: `created ${formatDistanceToNow(new Date(Date.now()))} ago`,\n      description: text,\n      completed: false,\n      edit: false,\n    }],\n    filter: 'All',\n  };\n\n  deleteItem = (id) => {\n    this.setState(({ listData }) => {\n      const idx = listData.findIndex((el) => el.id === id);\n      const newListData = [...listData];\n      newListData.splice(idx, 1);\n\n      return {\n        listData: newListData,\n      };\n    });\n  };\n\n  addItem = (text) => {\n    const newItem = this.createTodoItem(text);\n    this.setState(({ listData }) => {\n      const newListData = [...listData, newItem];\n      return {\n        listData: newListData,\n      };\n    });\n  };\n\n  editItem = (id, text) => {\n    const { listData } = this.state;\n    console.log('text: ', text);\n    const [item] = listData.filter((el) => el.id === id);\n    const newItem = { ...item, description: text, edit: false };\n    console.log(newItem);\n    this.setState(({ listData: newListData }) => {\n      const idx = newListData.findIndex((el) => el.id === id);\n      const newList = [...newListData.slice(0, idx), newItem, ...newListData.slice(idx + 1)];\n      return newList;\n    });\n  };\n\n  // editItem = (id, text) =>\n  //   this.setState((prev) => ({\n  //     listData: prev.listData.map((el) => (el.id === id ? { ...el, description: text} : el)),\n  //   }));\n\n  onToggleCompleted = (id) => {\n    this.setState(({ listData }) => ({\n      listData: this.toggleProperty(listData, id, 'completed'),\n    }));\n  };\n\n  onToggleEdit = (id) => {\n    this.setState(({ listData }) => ({\n      listData: this.toggleProperty(listData, id, 'edit'),\n    }));\n  };\n\n  clearCompleted = () => {\n    const { listData } = this.state;\n    const newListData = listData.filter((el) => !el.completed);\n    this.setState({\n      listData: newListData,\n    });\n  };\n\n  changeFilter = (filter) => {\n    this.setState({ filter });\n  };\n\n  toggleProperty(arr, id, propName) {\n    const idx = arr.findIndex((el) => el.id === id);\n\n    const oldItem = arr[idx];\n    const newItem = { ...oldItem, [propName]: !oldItem[propName] };\n\n    return [...arr.slice(0, idx), newItem, ...arr.slice(idx + 1)];\n  }\n\n  createTodoItem(text) {\n    // eslint-disable-next-line no-return-assign\n    return {\n      // eslint-disable-next-line react/no-unused-class-component-methods\n      id: Date.now(),\n      created: `created ${formatDistanceToNow(new Date(Date.now()))} ago`,\n      description: text,\n      completed: false,\n      edit: false,\n    };\n  }\n\n  render() {\n    const { listData, filter } = this.state;\n    const itemsLeft = listData.length - listData.filter((el) => el.completed).length;\n\n    let showData;\n    switch (filter) {\n      case 'Active':\n        showData = listData.filter((el) => !el.completed);\n        break;\n      case 'Completed':\n        showData = listData.filter((el) => el.completed);\n        break;\n      default:\n        showData = listData;\n    }\n\n    return (\n      <section className=\"todoapp\">\n        <header className=\"header\">\n          <h1>todos</h1>\n          <NewTaskForm onItemAdded={this.addItem} />\n        </header>\n        <section className=\"main\">\n          <TaskList\n            todos={showData}\n            onDeleted={this.deleteItem}\n            onToggleCompleted={this.onToggleCompleted}\n            onToggleEdit={this.onToggleEdit}\n            editItem={this.editItem}\n          />\n          <Footer\n            itemsLeft={itemsLeft}\n            changeFilter={this.changeFilter}\n            filter={filter}\n            clearCompleted={this.clearCompleted}\n          />\n        </section>\n      </section>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}