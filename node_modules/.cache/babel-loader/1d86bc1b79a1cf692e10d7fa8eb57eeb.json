{"ast":null,"code":"var _jsxFileName = \"/Users/georgijzubov/ReactJM/1. ToDo/kata-todo/src/components/todoapp/todoapp.jsx\";\nimport React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { formatDistanceToNow } from 'date-fns';\nimport NewTaskForm from '../new-task-form/new-task-form';\nimport TaskList from '../task-list/task-list';\nimport Footer from '../footer/footer';\nimport './todoapp.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class TodoApp extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      listData: [this.createTodoItem('Task 1'), this.createTodoItem('Task 2'), this.createTodoItem('Task 3'), this.createTodoItem('Task 4')],\n      filter: 'All'\n    };\n\n    this.deleteItem = id => {\n      this.setState(_ref => {\n        let {\n          listData\n        } = _ref;\n        const idx = listData.findIndex(el => el.id === id);\n        const newListData = [...listData];\n        newListData.splice(idx, 1);\n        return {\n          listData: newListData\n        };\n      });\n    };\n\n    this.addItem = text => {\n      const newItem = this.createTodoItem(text);\n      this.setState(_ref2 => {\n        let {\n          listData\n        } = _ref2;\n        const newListData = [...listData, newItem];\n        return {\n          listData: newListData\n        };\n      });\n    };\n\n    this.editItem = (id, text) => {\n      const {\n        listData\n      } = this.state;\n      const [item] = listData.filter(el => el.id === id);\n      const newItem = { ...item,\n        description: text,\n        edit: false\n      };\n      this.setState(_ref3 => {\n        let {\n          listData: newListData\n        } = _ref3;\n        const idx = newListData.findIndex(el => el.id === id);\n        const newList = {\n          listData: [...newListData.slice(0, idx), newItem, ...newListData.slice(idx + 1)]\n        };\n        return newList;\n      });\n    };\n\n    this.onToggleCompleted = id => {\n      this.setState(_ref4 => {\n        let {\n          listData\n        } = _ref4;\n        return {\n          listData: this.toggleProperty(listData, id, 'completed')\n        };\n      });\n    };\n\n    this.onToggleEdit = id => {\n      this.setState(_ref5 => {\n        let {\n          listData\n        } = _ref5;\n        return {\n          listData: this.toggleProperty(listData, id, 'edit')\n        };\n      });\n    };\n\n    this.clearCompleted = () => {\n      const {\n        listData\n      } = this.state;\n      const newListData = listData.filter(el => !el.completed);\n      this.setState({\n        listData: newListData\n      });\n    };\n\n    this.changeFilter = filter => {\n      this.setState({\n        filter\n      });\n    };\n  }\n\n  toggleProperty(arr, id, propName) {\n    const idx = arr.findIndex(el => el.id === id);\n    const oldItem = arr[idx];\n    const newItem = { ...oldItem,\n      [propName]: !oldItem[propName]\n    };\n    return [...arr.slice(0, idx), newItem, ...arr.slice(idx + 1)];\n  }\n\n  createTodoItem(text) {\n    const created = formatDistanceToNow(new Date(), {\n      addSuffix: true\n    });\n    const todoItem = {\n      id: uuidv4(),\n      created: `created ${created} ago`,\n      description: text,\n      completed: false,\n      edit: false\n    };\n    return todoItem;\n  }\n\n  render() {\n    const {\n      listData,\n      filter\n    } = this.state;\n    const itemsLeft = listData.length - listData.filter(el => el.completed).length;\n    let showData;\n\n    switch (filter) {\n      case 'Active':\n        showData = listData.filter(el => !el.completed);\n        break;\n\n      case 'Completed':\n        showData = listData.filter(el => el.completed);\n        break;\n\n      default:\n        showData = listData;\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"todoapp\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"todos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(NewTaskForm, {\n          onItemAdded: this.addItem\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"main\",\n        children: [/*#__PURE__*/_jsxDEV(TaskList, {\n          todos: showData,\n          onDeleted: this.deleteItem,\n          onToggleCompleted: this.onToggleCompleted,\n          onToggleEdit: this.onToggleEdit,\n          editItem: this.editItem\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Footer, {\n          itemsLeft: itemsLeft,\n          changeFilter: this.changeFilter,\n          filter: filter,\n          clearCompleted: this.clearCompleted\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/georgijzubov/ReactJM/1. ToDo/kata-todo/src/components/todoapp/todoapp.jsx"],"names":["React","Component","v4","uuidv4","formatDistanceToNow","NewTaskForm","TaskList","Footer","TodoApp","state","listData","createTodoItem","filter","deleteItem","id","setState","idx","findIndex","el","newListData","splice","addItem","text","newItem","editItem","item","description","edit","newList","slice","onToggleCompleted","toggleProperty","onToggleEdit","clearCompleted","completed","changeFilter","arr","propName","oldItem","created","Date","addSuffix","todoItem","render","itemsLeft","length","showData"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { formatDistanceToNow } from 'date-fns';\nimport NewTaskForm from '../new-task-form/new-task-form';\nimport TaskList from '../task-list/task-list';\nimport Footer from '../footer/footer';\nimport './todoapp.css';\n\nexport default class TodoApp extends Component {\n  state = {\n    listData: [\n      this.createTodoItem('Task 1'),\n      this.createTodoItem('Task 2'),\n      this.createTodoItem('Task 3'),\n      this.createTodoItem('Task 4'),\n    ],\n    filter: 'All',\n  };\n\n  deleteItem = (id) => {\n    this.setState(({ listData }) => {\n      const idx = listData.findIndex((el) => el.id === id);\n      const newListData = [...listData];\n      newListData.splice(idx, 1);\n\n      return {\n        listData: newListData,\n      };\n    });\n  };\n\n  addItem = (text) => {\n    const newItem = this.createTodoItem(text);\n    this.setState(({ listData }) => {\n      const newListData = [...listData, newItem];\n      return {\n        listData: newListData,\n      };\n    });\n  };\n\n  editItem = (id, text) => {\n    const { listData } = this.state;\n    const [item] = listData.filter((el) => el.id === id);\n    const newItem = { ...item, description: text, edit: false };\n    this.setState(({ listData: newListData }) => {\n      const idx = newListData.findIndex((el) => el.id === id);\n      const newList = { listData: [...newListData.slice(0, idx), newItem, ...newListData.slice(idx + 1)] };\n      return newList;\n    });\n  };\n\n  onToggleCompleted = (id) => {\n    this.setState(({ listData }) => ({\n      listData: this.toggleProperty(listData, id, 'completed'),\n    }));\n  };\n\n  onToggleEdit = (id) => {\n    this.setState(({ listData }) => ({\n      listData: this.toggleProperty(listData, id, 'edit'),\n    }));\n  };\n\n  clearCompleted = () => {\n    const { listData } = this.state;\n    const newListData = listData.filter((el) => !el.completed);\n    this.setState({\n      listData: newListData,\n    });\n  };\n\n  changeFilter = (filter) => {\n    this.setState({ filter });\n  };\n\n  toggleProperty(arr, id, propName) {\n    const idx = arr.findIndex((el) => el.id === id);\n\n    const oldItem = arr[idx];\n    const newItem = { ...oldItem, [propName]: !oldItem[propName] };\n\n    return [...arr.slice(0, idx), newItem, ...arr.slice(idx + 1)];\n  }\n\n  createTodoItem(text) {\n    const created = formatDistanceToNow(new Date(), { addSuffix: true });\n    const todoItem = {\n      id: uuidv4(),\n      created: `created ${created} ago`,\n      description: text,\n      completed: false,\n      edit: false,\n    };\n    return todoItem;\n  }\n\n  render() {\n    const { listData, filter } = this.state;\n    const itemsLeft = listData.length - listData.filter((el) => el.completed).length;\n\n    let showData;\n    switch (filter) {\n      case 'Active':\n        showData = listData.filter((el) => !el.completed);\n        break;\n      case 'Completed':\n        showData = listData.filter((el) => el.completed);\n        break;\n      default:\n        showData = listData;\n    }\n\n    return (\n      <section className=\"todoapp\">\n        <header className=\"header\">\n          <h1>todos</h1>\n          <NewTaskForm onItemAdded={this.addItem} />\n        </header>\n        <section className=\"main\">\n          <TaskList\n            todos={showData}\n            onDeleted={this.deleteItem}\n            onToggleCompleted={this.onToggleCompleted}\n            onToggleEdit={this.onToggleEdit}\n            editItem={this.editItem}\n          />\n          <Footer\n            itemsLeft={itemsLeft}\n            changeFilter={this.changeFilter}\n            filter={filter}\n            clearCompleted={this.clearCompleted}\n          />\n        </section>\n      </section>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}