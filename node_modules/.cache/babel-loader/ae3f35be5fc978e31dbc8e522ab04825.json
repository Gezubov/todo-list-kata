{"ast":null,"code":"var _jsxFileName = \"/Users/georgijzubov/ReactJM/1. ToDo/kata-todo/src/components/todoapp/todoapp.jsx\";\nimport React, { Component } from 'react';\nimport { formatDistanceToNow } from 'date-fns';\nimport NewTaskForm from '../new-task-form/new-task-form';\nimport TaskList from '../task-list/task-list';\nimport Footer from '../footer/footer';\nimport './todoapp.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class TodoApp extends Component {\n  constructor() {\n    super(...arguments);\n    this.maxId = 1;\n    this.state = {\n      listData: [this.createTodoItem('Completed Task'), this.createTodoItem('Editing Task'), this.createTodoItem('Active Task')],\n      filter: 'All'\n    };\n\n    this.deleteItem = id => {\n      this.setState(_ref => {\n        let {\n          listData\n        } = _ref;\n        const idx = listData.findIndex(el => el.id === id);\n        const newListData = [...listData];\n        newListData.splice(idx, 1);\n        return {\n          listData: newListData\n        };\n      });\n    };\n\n    this.addItem = text => {\n      const newItem = this.createTodoItem(text);\n      this.setState(_ref2 => {\n        let {\n          listData\n        } = _ref2;\n        const newListData = [...listData, newItem];\n        return {\n          listData: newListData\n        };\n      });\n    };\n\n    this.editItem = (id, text) => {\n      this.setState(_ref3 => {\n        let {\n          listData\n        } = _ref3;\n        const idx = listData.findIndex(el => el.id === id);\n        const oldItem = listData[idx];\n        const newItem = listData.find(el => {\n          return el.id === id;\n        });\n        newItem.description = text;\n        const newListData = [...listData];\n        return [...newListData.slice(0, idx), newItem, ...newListData.slice(idx + 1)];\n      });\n    };\n\n    this.onToggleCompleted = id => {\n      this.setState(_ref4 => {\n        let {\n          listData\n        } = _ref4;\n        return {\n          listData: this.toggleProperty(listData, id, 'completed')\n        };\n      });\n    };\n\n    this.onToggleEdit = id => {\n      this.setState(_ref5 => {\n        let {\n          listData\n        } = _ref5;\n        return {\n          listData: this.toggleProperty(listData, id, 'edit')\n        };\n      });\n    };\n\n    this.clearCompleted = () => {\n      const {\n        listData\n      } = this.state;\n      const newListData = listData.filter(el => !el.completed);\n      this.setState({\n        listData: newListData\n      });\n    };\n\n    this.changeFilter = filter => {\n      this.setState({\n        filter\n      });\n    };\n  }\n\n  toggleProperty(arr, id, propName) {\n    const idx = arr.findIndex(el => el.id === id);\n    const oldItem = arr[idx];\n    const newItem = { ...oldItem,\n      [propName]: !oldItem[propName]\n    };\n    return [...arr.slice(0, idx), newItem, ...arr.slice(idx + 1)];\n  }\n\n  createTodoItem(text) {\n    // eslint-disable-next-line no-return-assign\n    return {\n      // eslint-disable-next-line react/no-unused-class-component-methods\n      id: this.maxId += 1,\n      created: `created ${formatDistanceToNow(new Date(Date.now()))} ago`,\n      description: text,\n      completed: false,\n      edit: false\n    };\n  }\n\n  render() {\n    const {\n      listData,\n      filter\n    } = this.state;\n    const itemsLeft = listData.length - listData.filter(el => el.completed).length;\n    let showData;\n\n    switch (filter) {\n      case 'Active':\n        showData = listData.filter(el => !el.completed);\n        break;\n\n      case 'Completed':\n        showData = listData.filter(el => el.completed);\n        break;\n\n      default:\n        showData = listData;\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"todoapp\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"todos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(NewTaskForm, {\n          onItemAdded: this.addItem\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"main\",\n        children: [/*#__PURE__*/_jsxDEV(TaskList, {\n          todos: showData,\n          onDeleted: this.deleteItem,\n          onToggleCompleted: this.onToggleCompleted,\n          onToggleEdit: this.onToggleEdit,\n          editItem: this.editItem\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Footer, {\n          itemsLeft: itemsLeft,\n          changeFilter: this.changeFilter,\n          filter: filter,\n          clearCompleted: this.clearCompleted\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/georgijzubov/ReactJM/1. ToDo/kata-todo/src/components/todoapp/todoapp.jsx"],"names":["React","Component","formatDistanceToNow","NewTaskForm","TaskList","Footer","TodoApp","maxId","state","listData","createTodoItem","filter","deleteItem","id","setState","idx","findIndex","el","newListData","splice","addItem","text","newItem","editItem","oldItem","find","description","slice","onToggleCompleted","toggleProperty","onToggleEdit","clearCompleted","completed","changeFilter","arr","propName","created","Date","now","edit","render","itemsLeft","length","showData"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,mBAAT,QAAoC,UAApC;AACA,OAAOC,WAAP,MAAwB,gCAAxB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAO,eAAP;;AAEA,eAAe,MAAMC,OAAN,SAAsBL,SAAtB,CAAgC;AAAA;AAAA;AAAA,SAE7CM,KAF6C,GAErC,CAFqC;AAAA,SAI7CC,KAJ6C,GAIrC;AACNC,MAAAA,QAAQ,EAAE,CACR,KAAKC,cAAL,CAAoB,gBAApB,CADQ,EAER,KAAKA,cAAL,CAAoB,cAApB,CAFQ,EAGR,KAAKA,cAAL,CAAoB,aAApB,CAHQ,CADJ;AAMNC,MAAAA,MAAM,EAAE;AANF,KAJqC;;AAAA,SAa7CC,UAb6C,GAa/BC,EAAD,IAAQ;AACnB,WAAKC,QAAL,CAAc,QAAkB;AAAA,YAAjB;AAAEL,UAAAA;AAAF,SAAiB;AAC9B,cAAMM,GAAG,GAAGN,QAAQ,CAACO,SAAT,CAAoBC,EAAD,IAAQA,EAAE,CAACJ,EAAH,KAAUA,EAArC,CAAZ;AACA,cAAMK,WAAW,GAAG,CAAC,GAAGT,QAAJ,CAApB;AACAS,QAAAA,WAAW,CAACC,MAAZ,CAAmBJ,GAAnB,EAAwB,CAAxB;AAEA,eAAO;AACLN,UAAAA,QAAQ,EAAES;AADL,SAAP;AAGD,OARD;AASD,KAvB4C;;AAAA,SAyB7CE,OAzB6C,GAyBlCC,IAAD,IAAU;AAClB,YAAMC,OAAO,GAAG,KAAKZ,cAAL,CAAoBW,IAApB,CAAhB;AACA,WAAKP,QAAL,CAAc,SAAkB;AAAA,YAAjB;AAAEL,UAAAA;AAAF,SAAiB;AAC9B,cAAMS,WAAW,GAAG,CAAC,GAAGT,QAAJ,EAAca,OAAd,CAApB;AACA,eAAO;AACLb,UAAAA,QAAQ,EAAES;AADL,SAAP;AAGD,OALD;AAMD,KAjC4C;;AAAA,SAmC7CK,QAnC6C,GAmClC,CAACV,EAAD,EAAKQ,IAAL,KAAc;AACvB,WAAKP,QAAL,CAAc,SAAkB;AAAA,YAAjB;AAAEL,UAAAA;AAAF,SAAiB;AAC9B,cAAMM,GAAG,GAAGN,QAAQ,CAACO,SAAT,CAAoBC,EAAD,IAAQA,EAAE,CAACJ,EAAH,KAAUA,EAArC,CAAZ;AAEA,cAAMW,OAAO,GAAGf,QAAQ,CAACM,GAAD,CAAxB;AACA,cAAMO,OAAO,GAAGb,QAAQ,CAACgB,IAAT,CAAeR,EAAD,IAAQ;AACpC,iBAAOA,EAAE,CAACJ,EAAH,KAAUA,EAAjB;AACD,SAFe,CAAhB;AAGAS,QAAAA,OAAO,CAACI,WAAR,GAAsBL,IAAtB;AACA,cAAMH,WAAW,GAAG,CAAC,GAAGT,QAAJ,CAApB;AAEA,eAAO,CAAC,GAAGS,WAAW,CAACS,KAAZ,CAAkB,CAAlB,EAAqBZ,GAArB,CAAJ,EAA+BO,OAA/B,EAAwC,GAAGJ,WAAW,CAACS,KAAZ,CAAkBZ,GAAG,GAAG,CAAxB,CAA3C,CAAP;AACD,OAXD;AAYD,KAhD4C;;AAAA,SAkD7Ca,iBAlD6C,GAkDxBf,EAAD,IAAQ;AAC1B,WAAKC,QAAL,CAAc;AAAA,YAAC;AAAEL,UAAAA;AAAF,SAAD;AAAA,eAAmB;AAC/BA,UAAAA,QAAQ,EAAE,KAAKoB,cAAL,CAAoBpB,QAApB,EAA8BI,EAA9B,EAAkC,WAAlC;AADqB,SAAnB;AAAA,OAAd;AAGD,KAtD4C;;AAAA,SAwD7CiB,YAxD6C,GAwD7BjB,EAAD,IAAQ;AACrB,WAAKC,QAAL,CAAc;AAAA,YAAC;AAAEL,UAAAA;AAAF,SAAD;AAAA,eAAmB;AAC/BA,UAAAA,QAAQ,EAAE,KAAKoB,cAAL,CAAoBpB,QAApB,EAA8BI,EAA9B,EAAkC,MAAlC;AADqB,SAAnB;AAAA,OAAd;AAGD,KA5D4C;;AAAA,SA8D7CkB,cA9D6C,GA8D5B,MAAM;AACrB,YAAM;AAAEtB,QAAAA;AAAF,UAAe,KAAKD,KAA1B;AACA,YAAMU,WAAW,GAAGT,QAAQ,CAACE,MAAT,CAAiBM,EAAD,IAAQ,CAACA,EAAE,CAACe,SAA5B,CAApB;AACA,WAAKlB,QAAL,CAAc;AACZL,QAAAA,QAAQ,EAAES;AADE,OAAd;AAGD,KApE4C;;AAAA,SAsE7Ce,YAtE6C,GAsE7BtB,MAAD,IAAY;AACzB,WAAKG,QAAL,CAAc;AAAEH,QAAAA;AAAF,OAAd;AACD,KAxE4C;AAAA;;AA0E7CkB,EAAAA,cAAc,CAACK,GAAD,EAAMrB,EAAN,EAAUsB,QAAV,EAAoB;AAChC,UAAMpB,GAAG,GAAGmB,GAAG,CAAClB,SAAJ,CAAeC,EAAD,IAAQA,EAAE,CAACJ,EAAH,KAAUA,EAAhC,CAAZ;AAEA,UAAMW,OAAO,GAAGU,GAAG,CAACnB,GAAD,CAAnB;AACA,UAAMO,OAAO,GAAG,EAAE,GAAGE,OAAL;AAAc,OAACW,QAAD,GAAY,CAACX,OAAO,CAACW,QAAD;AAAlC,KAAhB;AAEA,WAAO,CAAC,GAAGD,GAAG,CAACP,KAAJ,CAAU,CAAV,EAAaZ,GAAb,CAAJ,EAAuBO,OAAvB,EAAgC,GAAGY,GAAG,CAACP,KAAJ,CAAUZ,GAAG,GAAG,CAAhB,CAAnC,CAAP;AACD;;AAEDL,EAAAA,cAAc,CAACW,IAAD,EAAO;AACnB;AACA,WAAO;AACL;AACAR,MAAAA,EAAE,EAAG,KAAKN,KAAL,IAAc,CAFd;AAGL6B,MAAAA,OAAO,EAAG,WAAUlC,mBAAmB,CAAC,IAAImC,IAAJ,CAASA,IAAI,CAACC,GAAL,EAAT,CAAD,CAAuB,MAHzD;AAILZ,MAAAA,WAAW,EAAEL,IAJR;AAKLW,MAAAA,SAAS,EAAE,KALN;AAMLO,MAAAA,IAAI,EAAE;AAND,KAAP;AAQD;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAE/B,MAAAA,QAAF;AAAYE,MAAAA;AAAZ,QAAuB,KAAKH,KAAlC;AACA,UAAMiC,SAAS,GAAGhC,QAAQ,CAACiC,MAAT,GAAkBjC,QAAQ,CAACE,MAAT,CAAiBM,EAAD,IAAQA,EAAE,CAACe,SAA3B,EAAsCU,MAA1E;AAEA,QAAIC,QAAJ;;AACA,YAAQhC,MAAR;AACE,WAAK,QAAL;AACEgC,QAAAA,QAAQ,GAAGlC,QAAQ,CAACE,MAAT,CAAiBM,EAAD,IAAQ,CAACA,EAAE,CAACe,SAA5B,CAAX;AACA;;AACF,WAAK,WAAL;AACEW,QAAAA,QAAQ,GAAGlC,QAAQ,CAACE,MAAT,CAAiBM,EAAD,IAAQA,EAAE,CAACe,SAA3B,CAAX;AACA;;AACF;AACEW,QAAAA,QAAQ,GAAGlC,QAAX;AARJ;;AAWA,wBACE;AAAS,MAAA,SAAS,EAAC,SAAnB;AAAA,8BACE;AAAQ,QAAA,SAAS,EAAC,QAAlB;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,WAAD;AAAa,UAAA,WAAW,EAAE,KAAKW;AAA/B;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAS,QAAA,SAAS,EAAC,MAAnB;AAAA,gCACE,QAAC,QAAD;AACE,UAAA,KAAK,EAAEuB,QADT;AAEE,UAAA,SAAS,EAAE,KAAK/B,UAFlB;AAGE,UAAA,iBAAiB,EAAE,KAAKgB,iBAH1B;AAIE,UAAA,YAAY,EAAE,KAAKE,YAJrB;AAKE,UAAA,QAAQ,EAAE,KAAKP;AALjB;AAAA;AAAA;AAAA;AAAA,gBADF,eAQE,QAAC,MAAD;AACE,UAAA,SAAS,EAAEkB,SADb;AAEE,UAAA,YAAY,EAAE,KAAKR,YAFrB;AAGE,UAAA,MAAM,EAAEtB,MAHV;AAIE,UAAA,cAAc,EAAE,KAAKoB;AAJvB;AAAA;AAAA;AAAA;AAAA,gBARF;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAuBD;;AAtI4C","sourcesContent":["import React, { Component } from 'react';\nimport { formatDistanceToNow } from 'date-fns';\nimport NewTaskForm from '../new-task-form/new-task-form';\nimport TaskList from '../task-list/task-list';\nimport Footer from '../footer/footer';\nimport './todoapp.css';\n\nexport default class TodoApp extends Component {\n  // eslint-disable-next-line react/no-unused-class-component-methods\n  maxId = 1;\n\n  state = {\n    listData: [\n      this.createTodoItem('Completed Task'),\n      this.createTodoItem('Editing Task'),\n      this.createTodoItem('Active Task'),\n    ],\n    filter: 'All',\n  };\n\n  deleteItem = (id) => {\n    this.setState(({ listData }) => {\n      const idx = listData.findIndex((el) => el.id === id);\n      const newListData = [...listData];\n      newListData.splice(idx, 1);\n\n      return {\n        listData: newListData,\n      };\n    });\n  };\n\n  addItem = (text) => {\n    const newItem = this.createTodoItem(text);\n    this.setState(({ listData }) => {\n      const newListData = [...listData, newItem];\n      return {\n        listData: newListData,\n      };\n    });\n  };\n\n  editItem = (id, text) => {\n    this.setState(({ listData }) => {\n      const idx = listData.findIndex((el) => el.id === id);\n\n      const oldItem = listData[idx];\n      const newItem = listData.find((el) => {\n        return el.id === id;\n      });\n      newItem.description = text;\n      const newListData = [...listData];\n\n      return [...newListData.slice(0, idx), newItem, ...newListData.slice(idx + 1)];\n    });\n  };\n\n  onToggleCompleted = (id) => {\n    this.setState(({ listData }) => ({\n      listData: this.toggleProperty(listData, id, 'completed'),\n    }));\n  };\n\n  onToggleEdit = (id) => {\n    this.setState(({ listData }) => ({\n      listData: this.toggleProperty(listData, id, 'edit'),\n    }));\n  };\n\n  clearCompleted = () => {\n    const { listData } = this.state;\n    const newListData = listData.filter((el) => !el.completed);\n    this.setState({\n      listData: newListData,\n    });\n  };\n\n  changeFilter = (filter) => {\n    this.setState({ filter });\n  };\n\n  toggleProperty(arr, id, propName) {\n    const idx = arr.findIndex((el) => el.id === id);\n\n    const oldItem = arr[idx];\n    const newItem = { ...oldItem, [propName]: !oldItem[propName] };\n\n    return [...arr.slice(0, idx), newItem, ...arr.slice(idx + 1)];\n  }\n\n  createTodoItem(text) {\n    // eslint-disable-next-line no-return-assign\n    return {\n      // eslint-disable-next-line react/no-unused-class-component-methods\n      id: (this.maxId += 1),\n      created: `created ${formatDistanceToNow(new Date(Date.now()))} ago`,\n      description: text,\n      completed: false,\n      edit: false,\n    };\n  }\n\n  render() {\n    const { listData, filter } = this.state;\n    const itemsLeft = listData.length - listData.filter((el) => el.completed).length;\n\n    let showData;\n    switch (filter) {\n      case 'Active':\n        showData = listData.filter((el) => !el.completed);\n        break;\n      case 'Completed':\n        showData = listData.filter((el) => el.completed);\n        break;\n      default:\n        showData = listData;\n    }\n\n    return (\n      <section className=\"todoapp\">\n        <header className=\"header\">\n          <h1>todos</h1>\n          <NewTaskForm onItemAdded={this.addItem} />\n        </header>\n        <section className=\"main\">\n          <TaskList\n            todos={showData}\n            onDeleted={this.deleteItem}\n            onToggleCompleted={this.onToggleCompleted}\n            onToggleEdit={this.onToggleEdit}\n            editItem={this.editItem}\n          />\n          <Footer\n            itemsLeft={itemsLeft}\n            changeFilter={this.changeFilter}\n            filter={filter}\n            clearCompleted={this.clearCompleted}\n          />\n        </section>\n      </section>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}