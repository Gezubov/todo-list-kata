{"ast":null,"code":"var _jsxFileName = \"/Users/georgijzubov/ReactJM/1. ToDo/kata-todo/src/components/todoapp/todoapp.jsx\";\nimport React, { Component } from 'react';\nimport { formatDistanceToNow } from 'date-fns';\nimport NewTaskForm from '../new-task-form/new-task-form';\nimport TaskList from '../task-list/task-list';\nimport Footer from '../footer/footer';\nimport './todoapp.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class TodoApp extends Component {\n  constructor() {\n    super(...arguments);\n    this.maxId = 100;\n    this.state = {\n      listData: [{\n        id: this.maxId += 1,\n        created: `created ${formatDistanceToNow(new Date(Date.now()))} ago`,\n        description: 'text',\n        completed: false,\n        edit: false\n      }],\n      filter: 'All'\n    };\n\n    this.deleteItem = id => {\n      this.setState(_ref => {\n        let {\n          listData\n        } = _ref;\n        const idx = listData.findIndex(el => el.id === id);\n        const newListData = [...listData];\n        newListData.splice(idx, 1);\n        return {\n          listData: newListData\n        };\n      });\n    };\n\n    this.addItem = text => {\n      const newItem = this.createTodoItem(text);\n      this.setState(_ref2 => {\n        let {\n          listData\n        } = _ref2;\n        const newListData = [...listData, newItem];\n        return {\n          listData: newListData\n        };\n      });\n    };\n\n    this.editItem = (id, text) => {\n      const {\n        listData\n      } = this.state;\n      console.log('text: ', text);\n      console.log('id: ', id);\n      const [item] = listData.filter(el => el.id === id);\n      console.log(item);\n      const newItem = { ...item,\n        description: text,\n        edit: false\n      };\n      console.log(newItem);\n      this.setState(_ref3 => {\n        let {\n          listData: newListData\n        } = _ref3;\n        const idx = newListData.findIndex(el => el.id === id);\n        const newList = {\n          listData: [...newListData.slice(0, idx), newItem, ...newListData.slice(idx + 1)]\n        };\n        return newList;\n      });\n    };\n\n    this.onToggleCompleted = id => {\n      this.setState(_ref4 => {\n        let {\n          listData\n        } = _ref4;\n        return {\n          listData: this.toggleProperty(listData, id, 'completed')\n        };\n      });\n    };\n\n    this.onToggleEdit = id => {\n      this.setState(_ref5 => {\n        let {\n          listData\n        } = _ref5;\n        return {\n          listData: this.toggleProperty(listData, id, 'edit')\n        };\n      });\n    };\n\n    this.clearCompleted = () => {\n      const {\n        listData\n      } = this.state;\n      const newListData = listData.filter(el => !el.completed);\n      this.setState({\n        listData: newListData\n      });\n    };\n\n    this.changeFilter = filter => {\n      this.setState({\n        filter\n      });\n    };\n  }\n\n  toggleProperty(arr, id, propName) {\n    const idx = arr.findIndex(el => el.id === id);\n    const oldItem = arr[idx];\n    const newItem = { ...oldItem,\n      [propName]: !oldItem[propName]\n    };\n    return [...arr.slice(0, idx), newItem, ...arr.slice(idx + 1)];\n  }\n\n  createTodoItem(text) {\n    // eslint-disable-next-line no-return-assign\n    return {\n      // eslint-disable-next-line react/no-unused-class-component-methods\n      id: this.maxId,\n      created: `created ${formatDistanceToNow(new Date(Date.now()))} ago`,\n      description: text,\n      completed: false,\n      edit: false\n    };\n  }\n\n  render() {\n    const {\n      listData,\n      filter\n    } = this.state;\n    const itemsLeft = listData.length - listData.filter(el => el.completed).length;\n    let showData;\n\n    switch (filter) {\n      case 'Active':\n        showData = listData.filter(el => !el.completed);\n        break;\n\n      case 'Completed':\n        showData = listData.filter(el => el.completed);\n        break;\n\n      default:\n        showData = listData;\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"todoapp\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"todos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(NewTaskForm, {\n          onItemAdded: this.addItem\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"main\",\n        children: [/*#__PURE__*/_jsxDEV(TaskList, {\n          todos: showData,\n          onDeleted: this.deleteItem,\n          onToggleCompleted: this.onToggleCompleted,\n          onToggleEdit: this.onToggleEdit,\n          editItem: this.editItem\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Footer, {\n          itemsLeft: itemsLeft,\n          changeFilter: this.changeFilter,\n          filter: filter,\n          clearCompleted: this.clearCompleted\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/georgijzubov/ReactJM/1. ToDo/kata-todo/src/components/todoapp/todoapp.jsx"],"names":["React","Component","formatDistanceToNow","NewTaskForm","TaskList","Footer","TodoApp","maxId","state","listData","id","created","Date","now","description","completed","edit","filter","deleteItem","setState","idx","findIndex","el","newListData","splice","addItem","text","newItem","createTodoItem","editItem","console","log","item","newList","slice","onToggleCompleted","toggleProperty","onToggleEdit","clearCompleted","changeFilter","arr","propName","oldItem","render","itemsLeft","length","showData"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { formatDistanceToNow } from 'date-fns';\nimport NewTaskForm from '../new-task-form/new-task-form';\nimport TaskList from '../task-list/task-list';\nimport Footer from '../footer/footer';\nimport './todoapp.css';\n\nexport default class TodoApp extends Component {\n  // eslint-disable-next-line react/no-unused-class-component-methods\n  maxId = 100;\n\n  state = {\n    listData: [\n      {\n        id: (this.maxId += 1),\n        created: `created ${formatDistanceToNow(new Date(Date.now()))} ago`,\n        description: 'text',\n        completed: false,\n        edit: false,\n      },\n    ],\n    filter: 'All',\n  };\n\n  deleteItem = (id) => {\n    this.setState(({ listData }) => {\n      const idx = listData.findIndex((el) => el.id === id);\n      const newListData = [...listData];\n      newListData.splice(idx, 1);\n\n      return {\n        listData: newListData,\n      };\n    });\n  };\n\n  addItem = (text) => {\n    const newItem = this.createTodoItem(text);\n    this.setState(({ listData }) => {\n      const newListData = [...listData, newItem];\n      return {\n        listData: newListData,\n      };\n    });\n  };\n\n  editItem = (id, text) => {\n    const { listData } = this.state;\n    console.log('text: ', text);\n    console.log('id: ', id);\n    const [item] = listData.filter((el) => el.id === id);\n    console.log(item);\n    const newItem = { ...item, description: text, edit: false };\n    console.log(newItem);\n    this.setState(({ listData: newListData }) => {\n      const idx = newListData.findIndex((el) => el.id === id);\n      const newList = { listData: [...newListData.slice(0, idx), newItem, ...newListData.slice(idx + 1)] };\n      return newList;\n    });\n  };\n\n  // editItem = (id, text) =>\n  //   this.setState((prev) => ({\n  //     listData: prev.listData.map((el) => (el.id === id ? { ...el, description: text} : el)),\n  //   }));\n\n  onToggleCompleted = (id) => {\n    this.setState(({ listData }) => ({\n      listData: this.toggleProperty(listData, id, 'completed'),\n    }));\n  };\n\n  onToggleEdit = (id) => {\n    this.setState(({ listData }) => ({\n      listData: this.toggleProperty(listData, id, 'edit'),\n    }));\n  };\n\n  clearCompleted = () => {\n    const { listData } = this.state;\n    const newListData = listData.filter((el) => !el.completed);\n    this.setState({\n      listData: newListData,\n    });\n  };\n\n  changeFilter = (filter) => {\n    this.setState({ filter });\n  };\n\n  toggleProperty(arr, id, propName) {\n    const idx = arr.findIndex((el) => el.id === id);\n\n    const oldItem = arr[idx];\n    const newItem = { ...oldItem, [propName]: !oldItem[propName] };\n\n    return [...arr.slice(0, idx), newItem, ...arr.slice(idx + 1)];\n  }\n\n  createTodoItem(text) {\n    // eslint-disable-next-line no-return-assign\n    return {\n      // eslint-disable-next-line react/no-unused-class-component-methods\n      id: this.maxId,\n      created: `created ${formatDistanceToNow(new Date(Date.now()))} ago`,\n      description: text,\n      completed: false,\n      edit: false,\n    };\n  }\n\n  render() {\n    const { listData, filter } = this.state;\n    const itemsLeft = listData.length - listData.filter((el) => el.completed).length;\n\n    let showData;\n    switch (filter) {\n      case 'Active':\n        showData = listData.filter((el) => !el.completed);\n        break;\n      case 'Completed':\n        showData = listData.filter((el) => el.completed);\n        break;\n      default:\n        showData = listData;\n    }\n\n    return (\n      <section className=\"todoapp\">\n        <header className=\"header\">\n          <h1>todos</h1>\n          <NewTaskForm onItemAdded={this.addItem} />\n        </header>\n        <section className=\"main\">\n          <TaskList\n            todos={showData}\n            onDeleted={this.deleteItem}\n            onToggleCompleted={this.onToggleCompleted}\n            onToggleEdit={this.onToggleEdit}\n            editItem={this.editItem}\n          />\n          <Footer\n            itemsLeft={itemsLeft}\n            changeFilter={this.changeFilter}\n            filter={filter}\n            clearCompleted={this.clearCompleted}\n          />\n        </section>\n      </section>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}