{"ast":null,"code":"var _jsxFileName = \"/Users/georgijzubov/ReactJM/1. ToDo/kata-todo/src/components/todoapp/todoapp.js\";\nimport React, { Component } from \"react\";\nimport { formatDistanceToNow } from \"date-fns\";\nimport NewTaskForm from \"../new-task-form/new-task-form\";\nimport TaskList from \"../task-list/task-list\";\nimport Footer from \"../footer/footer\";\nimport \"./todoapp.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class TodoApp extends Component {\n  constructor() {\n    super(...arguments);\n    this.maxId = 1;\n    this.state = {\n      listData: [this.createTodoItem(\"Completed Task\"), this.createTodoItem(\"Editing Task\"), this.createTodoItem(\"Active Task\")],\n      filter: \"All\"\n    };\n\n    this.deleteItem = id => {\n      this.setState(_ref => {\n        let {\n          listData\n        } = _ref;\n        const idx = listData.findIndex(el => el.id === id);\n        console.log(\"delete idx =\", idx);\n        const newListData = [...listData];\n        newListData.splice(idx, 1);\n        return {\n          listData: newListData\n        };\n      });\n    };\n\n    this.addItem = text => {\n      const newItem = this.createTodoItem(text);\n      this.setState(_ref2 => {\n        let {\n          listData\n        } = _ref2;\n        const newListData = [...listData, newItem];\n        return {\n          listData: newListData\n        };\n      });\n    };\n\n    this.onToggleCompleted = id => {\n      this.setState(_ref3 => {\n        let {\n          listData\n        } = _ref3;\n        return {\n          listData: this.toggleProperty(listData, id, \"completed\")\n        };\n      });\n      console.log(\"togggle done: \", id);\n    };\n\n    this.onToggleEdit = id => {\n      this.setState(_ref4 => {\n        let {\n          listData\n        } = _ref4;\n        return {\n          listData: this.toggleProperty(listData, id, \"edit\")\n        };\n      });\n      console.log(\"togggle edit: \", id);\n    };\n\n    this.editItem = id => {\n      this.setState(_ref5 => {\n        let {\n          listData\n        } = _ref5;\n        const idx = listData.findIndex(el => el.id === id);\n        console.log(\"edit idx =\", idx);\n        const newListData = [...listData];\n        newListData.splice(idx, 1);\n        return {\n          listData: newListData\n        };\n      });\n    };\n\n    this.clearCompleted = () => {\n      const newListData = this.state.listData.filter(el => !el.completed);\n      this.setState({\n        listData: newListData\n      });\n    };\n\n    this.changeFilter = filter => {\n      this.setState({\n        filter\n      });\n    };\n  }\n\n  createTodoItem(text) {\n    return {\n      id: this.maxId++,\n      created: `created ${formatDistanceToNow(new Date(Date.now()))} ago`,\n      description: text,\n      completed: false,\n      edit: false\n    };\n  }\n\n  toggleProperty(arr, id, propName) {\n    const idx = arr.findIndex(el => el.id === id);\n    const oldItem = arr[idx];\n    const newItem = { ...oldItem,\n      [propName]: !oldItem[propName]\n    };\n    return [...arr.slice(0, idx), newItem, ...arr.slice(idx + 1)];\n  }\n\n  render() {\n    const {\n      listData,\n      filter\n    } = this.state;\n    const itemsLeft = listData.length - listData.filter(el => el.completed).length;\n    let showData;\n\n    switch (filter) {\n      case \"Active\":\n        showData = listData.filter(el => !el.completed);\n        break;\n\n      case \"Completed\":\n        showData = listData.filter(el => el.completed);\n        break;\n\n      default:\n        showData = listData;\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"todoapp\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"todos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(NewTaskForm, {\n          onItemAdded: this.addItem\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"main\",\n        children: [/*#__PURE__*/_jsxDEV(TaskList, {\n          todos: showData,\n          onDeleted: this.deleteItem,\n          onToggleCompleted: this.onToggleCompleted,\n          onToggleEdit: this.onToggleEdit,\n          onEdit: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Footer, {\n          itemsLeft: itemsLeft,\n          changeFilter: this.changeFilter,\n          filter: filter,\n          clearCompleted: this.clearCompleted\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/georgijzubov/ReactJM/1. ToDo/kata-todo/src/components/todoapp/todoapp.js"],"names":["React","Component","formatDistanceToNow","NewTaskForm","TaskList","Footer","TodoApp","maxId","state","listData","createTodoItem","filter","deleteItem","id","setState","idx","findIndex","el","console","log","newListData","splice","addItem","text","newItem","onToggleCompleted","toggleProperty","onToggleEdit","editItem","clearCompleted","completed","changeFilter","created","Date","now","description","edit","arr","propName","oldItem","slice","render","itemsLeft","length","showData"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { formatDistanceToNow } from \"date-fns\";\nimport NewTaskForm from \"../new-task-form/new-task-form\";\nimport TaskList from \"../task-list/task-list\";\nimport Footer from \"../footer/footer\";\nimport \"./todoapp.css\";\n\nexport default class TodoApp extends Component {\n  maxId = 1;\n\n  state = {\n    listData: [\n      this.createTodoItem(\"Completed Task\"),\n      this.createTodoItem(\"Editing Task\"),\n      this.createTodoItem(\"Active Task\"),\n    ],\n    filter: \"All\",\n  };\n\n  createTodoItem(text) {\n    return {\n      id: this.maxId++,\n      created: `created ${formatDistanceToNow(new Date(Date.now()))} ago`,\n      description: text,\n      completed: false,\n      edit: false,\n    };\n  }\n\n  deleteItem = (id) => {\n    this.setState(({ listData }) => {\n      const idx = listData.findIndex((el) => el.id === id);\n      console.log(\"delete idx =\", idx);\n      const newListData = [...listData];\n      newListData.splice(idx, 1);\n\n      return {\n        listData: newListData,\n      };\n    });\n  };\n\n  addItem = (text) => {\n    const newItem = this.createTodoItem(text);\n    this.setState(({ listData }) => {\n      const newListData = [...listData, newItem];\n      return {\n        listData: newListData,\n      };\n    });\n  };\n\n  toggleProperty(arr, id, propName) {\n    const idx = arr.findIndex((el) => el.id === id);\n\n    const oldItem = arr[idx];\n    const newItem = { ...oldItem, [propName]: !oldItem[propName] };\n\n    return [...arr.slice(0, idx), newItem, ...arr.slice(idx + 1)];\n  }\n\n  onToggleCompleted = (id) => {\n    this.setState(({ listData }) => {\n      return {\n        listData: this.toggleProperty(listData, id, \"completed\"),\n      };\n    });\n    console.log(\"togggle done: \", id);\n  };\n\n  onToggleEdit = (id) => {\n    this.setState(({ listData }) => {\n      return {\n        listData: this.toggleProperty(listData, id, \"edit\"),\n      };\n    });\n    console.log(\"togggle edit: \", id);\n  };\n\n  editItem = (id) => {\n    this.setState(({ listData }) => {\n      const idx = listData.findIndex((el) => el.id === id);\n      console.log(\"edit idx =\", idx);\n      const newListData = [...listData];\n      newListData.splice(idx, 1);\n\n      return {\n        listData: newListData,\n      };\n    });\n  };\n\n  clearCompleted = () => {\n    const newListData = this.state.listData.filter((el) => !el.completed);\n    this.setState({\n      listData: newListData,\n    });\n  };\n  changeFilter = (filter) => {\n    this.setState({ filter });\n  };\n\n  render() {\n    const { listData, filter } = this.state;\n    const itemsLeft =\n      listData.length - listData.filter((el) => el.completed).length;\n\n    let showData;\n    switch (filter) {\n      case \"Active\":\n        showData = listData.filter((el) => !el.completed);\n        break;\n      case \"Completed\":\n        showData = listData.filter((el) => el.completed);\n        break;\n      default:\n        showData = listData;\n    }\n\n    return (\n      <section className=\"todoapp\">\n        <header className=\"header\">\n          <h1>todos</h1>\n          <NewTaskForm onItemAdded={this.addItem} />\n        </header>\n        <section className=\"main\">\n          <TaskList\n            todos={showData}\n            onDeleted={this.deleteItem}\n            onToggleCompleted={this.onToggleCompleted}\n            onToggleEdit={this.onToggleEdit}\n            onEdit\n          />\n          <Footer\n            itemsLeft={itemsLeft}\n            changeFilter={this.changeFilter}\n            filter={filter}\n            clearCompleted={this.clearCompleted}\n          />\n        </section>\n      </section>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}