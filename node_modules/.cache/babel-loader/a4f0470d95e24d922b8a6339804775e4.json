{"ast":null,"code":"var _jsxFileName = \"/Users/georgijzubov/ReactJM/1. ToDo/kata-todo/src/components/task/task.jsx\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './task.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Task extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      // eslint-disable-next-line react/destructuring-assignment\n      description: this.props.description\n    };\n\n    this.onDescriptionChange = evt => {\n      this.setState({\n        description: evt.target.value\n      });\n    };\n\n    this.onSubmit = evt => {\n      evt.preventDefault();\n      const {\n        editItem,\n        id\n      } = this.props;\n      const {\n        description\n      } = this.state;\n      editItem(id, description);\n      this.setState({\n        description\n      });\n    };\n  }\n\n  render() {\n    const {\n      id,\n      description,\n      created,\n      onDeleted,\n      onToggleCompleted,\n      completed,\n      onToggleEdit,\n      edit\n    } = this.props;\n    const {\n      description: newDescription\n    } = this.state;\n    let className;\n    let checked = '';\n\n    if (completed) {\n      className = 'completed';\n      checked = 'checked';\n    }\n\n    if (edit) className = 'editing';\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      className: className,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"view\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"toggle\",\n          type: \"checkbox\",\n          onChange: () => {\n            onToggleCompleted(id);\n          },\n          checked: checked\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"description\",\n            children: description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"created\",\n            children: created\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"icon icon-edit\",\n          onClick: () => {\n            onToggleEdit(id);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"icon icon-destroy\",\n          onClick: () => {\n            onDeleted(id);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.onSubmit,\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"edit\",\n          value: newDescription,\n          onKeyDown: this.editItem,\n          onChange: this.onDescriptionChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nTask.defaultProps = {\n  created: Date.now(),\n  editItem: () => {},\n  onDeleted: () => {},\n  onToggleCompleted: () => {}\n};\nTask.propTypes = {\n  id: PropTypes.number.isRequired,\n  description: PropTypes.string.isRequired,\n  editItem: PropTypes.func,\n  created: PropTypes.number,\n  onDeleted: PropTypes.func,\n  onToggleCompleted: PropTypes.func,\n  completed: PropTypes.bool\n};","map":{"version":3,"sources":["/Users/georgijzubov/ReactJM/1. ToDo/kata-todo/src/components/task/task.jsx"],"names":["React","Component","PropTypes","Task","state","description","props","onDescriptionChange","evt","setState","target","value","onSubmit","preventDefault","editItem","id","render","created","onDeleted","onToggleCompleted","completed","onToggleEdit","edit","newDescription","className","checked","defaultProps","Date","now","propTypes","number","isRequired","string","func","bool"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './task.css';\n\nexport default class Task extends Component {\n  static defaultProps = {\n    created: Date.now(),\n    editItem: () => {},\n    onDeleted: ()=>{},\n    onToggleCompleted: ()=>{},\n  };\n\n  static propTypes = {\n    id: PropTypes.number.isRequired,\n    description: PropTypes.string.isRequired,\n    editItem: PropTypes.func,\n    created: PropTypes.number,\n    onDeleted: PropTypes.func,\n    onToggleCompleted:PropTypes.func,\n    completed: PropTypes.bool,\n\n  };\n\n  state = {\n    // eslint-disable-next-line react/destructuring-assignment\n    description: this.props.description,\n  };\n\n  onDescriptionChange = (evt) => {\n    this.setState({ description: evt.target.value });\n  };\n\n  onSubmit = (evt) => {\n    evt.preventDefault();\n    const { editItem, id } = this.props;\n    const { description } = this.state;\n    editItem(id, description);\n    this.setState({ description });\n  };\n\n  render() {\n    const { id, description, created, onDeleted, onToggleCompleted, completed, onToggleEdit, edit } = this.props;\n    const { description: newDescription } = this.state;\n    let className;\n    let checked = '';\n    if (completed) {\n      className = 'completed';\n      checked = 'checked';\n    }\n    if (edit) className = 'editing';\n\n    return (\n      <li className={className}>\n        <div className=\"view\">\n          <input\n            className=\"toggle\"\n            type=\"checkbox\"\n            onChange={() => {\n              onToggleCompleted(id);\n            }}\n            checked={checked}\n          />\n          <label>\n            <span className=\"description\">{description}</span>\n            <span className=\"created\">{created}</span>\n          </label>\n          <button\n            type=\"submit\"\n            className=\"icon icon-edit\"\n            onClick={() => {\n              onToggleEdit(id);\n            }}\n          >\n            {}\n          </button>\n          <button\n            type=\"submit\"\n            className=\"icon icon-destroy\"\n            onClick={() => {\n              onDeleted(id);\n            }}\n          >\n            {}\n          </button>\n        </div>\n        <form onSubmit={this.onSubmit}>\n          <input\n            className=\"edit\"\n            value={newDescription}\n            onKeyDown={this.editItem}\n            onChange={this.onDescriptionChange}\n          />\n        </form>\n      </li>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}