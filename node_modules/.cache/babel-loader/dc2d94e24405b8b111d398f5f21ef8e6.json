{"ast":null,"code":"var _jsxFileName = \"/Users/georgijzubov/ReactJM/1. ToDo/kata-todo/src/components/todoapp/todoapp.jsx\";\nimport React, { Component } from 'react';\nimport { formatDistanceToNow } from 'date-fns';\nimport NewTaskForm from '../new-task-form/new-task-form';\nimport TaskList from '../task-list/task-list';\nimport Footer from '../footer/footer';\nimport './todoapp.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class TodoApp extends Component {\n  constructor() {\n    super(...arguments);\n    this.maxId = 1;\n    this.state = {\n      listData: [this.createTodoItem('Completed Task'), this.createTodoItem('Editing Task'), this.createTodoItem('Active Task')],\n      filter: 'All'\n    };\n  }\n\n  // deleteItem = (id) => {\n  //   this.setState(({ listData }) => {\n  //     const idx = listData.findIndex((el) => el.id === id);\n  //     const newListData = [...listData];\n  //     newListData.splice(idx, 1);\n  //     return {\n  //       listData: newListData,\n  //     };\n  //   });\n  // };\n  // addItem = (text) => {\n  //   const newItem = this.createTodoItem(text);\n  //   this.setState(({ listData }) => {\n  //     const newListData = [...listData, newItem];\n  //     return {\n  //       listData: newListData,\n  //     };\n  //   });\n  // };\n  // editItem = (id, text) => {\n  //   this.setState(({ listData }) => {\n  //     const idx = listData.findIndex((el) => el.id === id);\n  //     const newItem = { ...listData[idx], text };\n  //     const newListData = [...listData];\n  //     newListData.splice(idx, 1, newItem);\n  //     return {\n  //       listData: newListData,\n  //     };\n  //   });\n  // };\n  // onToggleCompleted = (id) => {\n  //   this.setState(({ listData }) => ({\n  //     listData: this.toggleProperty(listData, id, 'completed'),\n  //   }));\n  // };\n  // onToggleEdit = (id) => {\n  //   this.setState(({ listData }) => ({\n  //     listData: this.toggleProperty(listData, id, 'edit'),\n  //   }));\n  // };\n  // clearCompleted = () => {\n  //   const { listData } = this.state;\n  //   const newListData = listData.filter((el) => !el.completed);\n  //   this.setState({\n  //     listData: newListData,\n  //   });\n  // };\n  // changeFilter = (filter) => {\n  //   this.setState({ filter });\n  // };\n  // toggleProperty(arr, id, propName) {\n  //   const idx = arr.findIndex((el) => el.id === id);\n  //   const oldItem = arr[idx];\n  //   const newItem = { ...oldItem, [propName]: !oldItem[propName] };\n  //   return [...arr.slice(0, idx), newItem, ...arr.slice(idx + 1)];\n  // }\n  // createTodoItem(text) {\n  //   // eslint-disable-next-line no-return-assign\n  //   return {\n  //     // eslint-disable-next-line react/no-unused-class-component-methods\n  //     id: (this.maxId += 1),\n  //     created: `created ${formatDistanceToNow(new Date(Date.now()))} ago`,\n  //     description: text,\n  //     completed: false,\n  //     edit: false,\n  //   };\n  // }\n  render() {\n    const {\n      listData,\n      filter\n    } = this.state;\n    const itemsLeft = listData.length - listData.filter(el => el.completed).length;\n    let showData;\n\n    switch (filter) {\n      case 'Active':\n        showData = listData.filter(el => !el.completed);\n        break;\n\n      case 'Completed':\n        showData = listData.filter(el => el.completed);\n        break;\n\n      default:\n        showData = listData;\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"todoapp\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"todos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(NewTaskForm, {\n          onItemAdded: this.addItem\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"main\",\n        children: [/*#__PURE__*/_jsxDEV(TaskList, {\n          todos: showData,\n          onDeleted: this.deleteItem,\n          onToggleCompleted: this.onToggleCompleted,\n          onToggleEdit: this.onToggleEdit,\n          editItem: this.editItem\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Footer, {\n          itemsLeft: itemsLeft,\n          changeFilter: this.changeFilter,\n          filter: filter,\n          clearCompleted: this.clearCompleted\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/georgijzubov/ReactJM/1. ToDo/kata-todo/src/components/todoapp/todoapp.jsx"],"names":["React","Component","formatDistanceToNow","NewTaskForm","TaskList","Footer","TodoApp","maxId","state","listData","createTodoItem","filter","render","itemsLeft","length","el","completed","showData","addItem","deleteItem","onToggleCompleted","onToggleEdit","editItem","changeFilter","clearCompleted"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,mBAAT,QAAoC,UAApC;AACA,OAAOC,WAAP,MAAwB,gCAAxB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAO,eAAP;;AAEA,eAAe,MAAMC,OAAN,SAAsBL,SAAtB,CAAgC;AAAA;AAAA;AAAA,SAE7CM,KAF6C,GAErC,CAFqC;AAAA,SAI7CC,KAJ6C,GAIrC;AACNC,MAAAA,QAAQ,EAAE,CACR,KAAKC,cAAL,CAAoB,gBAApB,CADQ,EAER,KAAKA,cAAL,CAAoB,cAApB,CAFQ,EAGR,KAAKA,cAAL,CAAoB,aAApB,CAHQ,CADJ;AAMNC,MAAAA,MAAM,EAAE;AANF,KAJqC;AAAA;;AAa7C;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEH,MAAAA,QAAF;AAAYE,MAAAA;AAAZ,QAAuB,KAAKH,KAAlC;AACA,UAAMK,SAAS,GAAGJ,QAAQ,CAACK,MAAT,GAAkBL,QAAQ,CAACE,MAAT,CAAiBI,EAAD,IAAQA,EAAE,CAACC,SAA3B,EAAsCF,MAA1E;AAEA,QAAIG,QAAJ;;AACA,YAAQN,MAAR;AACE,WAAK,QAAL;AACEM,QAAAA,QAAQ,GAAGR,QAAQ,CAACE,MAAT,CAAiBI,EAAD,IAAQ,CAACA,EAAE,CAACC,SAA5B,CAAX;AACA;;AACF,WAAK,WAAL;AACEC,QAAAA,QAAQ,GAAGR,QAAQ,CAACE,MAAT,CAAiBI,EAAD,IAAQA,EAAE,CAACC,SAA3B,CAAX;AACA;;AACF;AACEC,QAAAA,QAAQ,GAAGR,QAAX;AARJ;;AAWA,wBACE;AAAS,MAAA,SAAS,EAAC,SAAnB;AAAA,8BACE;AAAQ,QAAA,SAAS,EAAC,QAAlB;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,WAAD;AAAa,UAAA,WAAW,EAAE,KAAKS;AAA/B;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAS,QAAA,SAAS,EAAC,MAAnB;AAAA,gCACE,QAAC,QAAD;AACE,UAAA,KAAK,EAAED,QADT;AAEE,UAAA,SAAS,EAAE,KAAKE,UAFlB;AAGE,UAAA,iBAAiB,EAAE,KAAKC,iBAH1B;AAIE,UAAA,YAAY,EAAE,KAAKC,YAJrB;AAKE,UAAA,QAAQ,EAAE,KAAKC;AALjB;AAAA;AAAA;AAAA;AAAA,gBADF,eAQE,QAAC,MAAD;AACE,UAAA,SAAS,EAAET,SADb;AAEE,UAAA,YAAY,EAAE,KAAKU,YAFrB;AAGE,UAAA,MAAM,EAAEZ,MAHV;AAIE,UAAA,cAAc,EAAE,KAAKa;AAJvB;AAAA;AAAA;AAAA;AAAA,gBARF;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAuBD;;AApI4C","sourcesContent":["import React, { Component } from 'react';\nimport { formatDistanceToNow } from 'date-fns';\nimport NewTaskForm from '../new-task-form/new-task-form';\nimport TaskList from '../task-list/task-list';\nimport Footer from '../footer/footer';\nimport './todoapp.css';\n\nexport default class TodoApp extends Component {\n  // eslint-disable-next-line react/no-unused-class-component-methods\n  maxId = 1;\n\n  state = {\n    listData: [\n      this.createTodoItem('Completed Task'),\n      this.createTodoItem('Editing Task'),\n      this.createTodoItem('Active Task'),\n    ],\n    filter: 'All',\n  };\n\n  // deleteItem = (id) => {\n  //   this.setState(({ listData }) => {\n  //     const idx = listData.findIndex((el) => el.id === id);\n  //     const newListData = [...listData];\n  //     newListData.splice(idx, 1);\n\n  //     return {\n  //       listData: newListData,\n  //     };\n  //   });\n  // };\n\n  // addItem = (text) => {\n  //   const newItem = this.createTodoItem(text);\n  //   this.setState(({ listData }) => {\n  //     const newListData = [...listData, newItem];\n  //     return {\n  //       listData: newListData,\n  //     };\n  //   });\n  // };\n\n  // editItem = (id, text) => {\n  //   this.setState(({ listData }) => {\n  //     const idx = listData.findIndex((el) => el.id === id);\n\n  //     const newItem = { ...listData[idx], text };\n  //     const newListData = [...listData];\n  //     newListData.splice(idx, 1, newItem);\n  //     return {\n  //       listData: newListData,\n  //     };\n  //   });\n  // };\n\n  // onToggleCompleted = (id) => {\n  //   this.setState(({ listData }) => ({\n  //     listData: this.toggleProperty(listData, id, 'completed'),\n  //   }));\n  // };\n\n  // onToggleEdit = (id) => {\n  //   this.setState(({ listData }) => ({\n  //     listData: this.toggleProperty(listData, id, 'edit'),\n  //   }));\n  // };\n\n  // clearCompleted = () => {\n  //   const { listData } = this.state;\n  //   const newListData = listData.filter((el) => !el.completed);\n  //   this.setState({\n  //     listData: newListData,\n  //   });\n  // };\n\n  // changeFilter = (filter) => {\n  //   this.setState({ filter });\n  // };\n\n  // toggleProperty(arr, id, propName) {\n  //   const idx = arr.findIndex((el) => el.id === id);\n\n  //   const oldItem = arr[idx];\n  //   const newItem = { ...oldItem, [propName]: !oldItem[propName] };\n\n  //   return [...arr.slice(0, idx), newItem, ...arr.slice(idx + 1)];\n  // }\n\n  // createTodoItem(text) {\n  //   // eslint-disable-next-line no-return-assign\n  //   return {\n  //     // eslint-disable-next-line react/no-unused-class-component-methods\n  //     id: (this.maxId += 1),\n  //     created: `created ${formatDistanceToNow(new Date(Date.now()))} ago`,\n  //     description: text,\n  //     completed: false,\n  //     edit: false,\n  //   };\n  // }\n\n  render() {\n    const { listData, filter } = this.state;\n    const itemsLeft = listData.length - listData.filter((el) => el.completed).length;\n\n    let showData;\n    switch (filter) {\n      case 'Active':\n        showData = listData.filter((el) => !el.completed);\n        break;\n      case 'Completed':\n        showData = listData.filter((el) => el.completed);\n        break;\n      default:\n        showData = listData;\n    }\n\n    return (\n      <section className=\"todoapp\">\n        <header className=\"header\">\n          <h1>todos</h1>\n          <NewTaskForm onItemAdded={this.addItem} />\n        </header>\n        <section className=\"main\">\n          <TaskList\n            todos={showData}\n            onDeleted={this.deleteItem}\n            onToggleCompleted={this.onToggleCompleted}\n            onToggleEdit={this.onToggleEdit}\n            editItem={this.editItem}\n          />\n          <Footer\n            itemsLeft={itemsLeft}\n            changeFilter={this.changeFilter}\n            filter={filter}\n            clearCompleted={this.clearCompleted}\n          />\n        </section>\n      </section>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}